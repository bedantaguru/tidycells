% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/core_classes_public.R
\name{as_sheets}
\alias{as_sheets}
\title{Transform Data into a Standard 'sheets' Structure}
\usage{
as_sheets(x)
}
\arguments{
\item{x}{The R object to transform (list, data.frame, matrix, or \code{cells}).}
}
\value{
An object of class \code{sheets}, which is a uniquely named list of
\code{cells} objects.
}
\description{
This S3 generic function transforms various R objects into a
standardized \code{sheets} object. A \code{sheets} object is a named list of \code{cells}
objects, each representing a single sheet (e.g., as in an Excel workbook).

This function handles three common input types:
\enumerate{
\item A named or unnamed list where each element is a data.frame, matrix,
or similar tabular object. Each element is treated as one sheet.
\item A single "long" data.frame that contains a \code{sheet} column. The data is
split by that column, and each subset becomes a separate sheet.
\item A single data.frame, matrix, or \code{cells} object, which is wrapped into
a one-element \code{sheets} list with default name \code{"sheet_default"}.
}

Each sheet (node) is internally passed through \code{\link[=as_cells]{as_cells()}} to standardize
it as a \code{cells} object. This ensures that the final result is a uniquely
named list of valid \code{cells} objects â€” forming the \code{sheets} structure.
}
\examples{
# Case 1: List of data.frames
sheets1 <- as_sheets(list(sheet1 = iris, sheet2 = mtcars))

# Case 2: Long data.frame with a 'sheet' column
long_df <- data.frame(
  sheet = rep(c("A", "B"), each = 3),
  row = 1:6, col = 1,
  data_type = "character",
  value = letters[1:6]
)

sheets2 <- as_sheets(long_df)

# Case 3: Single data.frame as one sheet
sheets3 <- as_sheets(mtcars)
}
\seealso{
\code{\link[=as_cells]{as_cells()}}
}
